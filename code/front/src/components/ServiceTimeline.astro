---
interface Ping {
  timestamp: Date;
  status: 'up' | 'down';
  responseTime: number;
}

interface Props {
  name: string;
  pings: Ping[];
}

const { name, pings } = Astro.props;
---

<div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100" data-service-timeline>
  <div class="flex justify-between items-center mb-6">
    <div class="flex items-center space-x-3">
      <div class="w-2 h-2 rounded-full relative before:content-[''] before:w-2 before:h-2 before:rounded-full before:absolute before:inset-0 before:animate-ping before:bg-green-500/75" data-status-indicator></div>
      <h2 class="text-xl font-semibold text-gray-800">{name}</h2>
    </div>
    <div class="flex items-center space-x-3">
      <span class="inline-flex items-center space-x-1 text-sm font-medium px-3 py-1 rounded-full" data-status-badge></span>
    </div>
  </div>

  <div class="flex gap-1 items-center mb-6 h-12 bg-gray-50 rounded-lg px-2 overflow-hidden" data-timeline></div>

  <div class="flex justify-between items-center text-sm px-1">
    <div class="flex flex-col">
      <span class="text-gray-500 mb-1">Uptime</span>
      <span class="font-bold text-lg" data-uptime></span>
    </div>
    <div class="h-12 w-px bg-gray-200"></div>
    <div class="flex flex-col items-end">
      <span class="text-gray-500 mb-1">Response Time</span>
      <span class="font-bold text-lg" data-response-time></span>
    </div>
  </div>
</div>