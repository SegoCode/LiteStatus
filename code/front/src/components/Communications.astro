---
interface Communication {
  timestamp: Date;
  message: string;
  type: 'investigating' | 'resolved';
}

interface Props {
  messages: Communication[];
}

const { messages } = Astro.props;

const getStatusIcon = (type: 'investigating' | 'resolved') => {
  return type === 'resolved'
    ? '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>'
    : '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>';
};
---

<div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100">
  <h2 class="text-2xl font-semibold text-gray-800 mb-6">System Communications</h2>
  {messages.length === 0 ? (
    <div class="text-center py-8">
      <svg class="w-16 h-16 mx-auto text-gray-300 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
      </svg>
      <p class="text-gray-500">No recent communications</p>
    </div>
  ) : (
    <ul class="space-y-6">
      {messages.map((message) => (
        <li class="flex items-start group">
          <div class={`flex-shrink-0 w-10 h-10 rounded-full flex items-center justify-center mr-4 ${
            message.type === 'investigating' 
              ? 'bg-yellow-100 text-yellow-600' 
              : 'bg-green-100 text-green-600'
          }`}>
            <Fragment set:html={getStatusIcon(message.type)} />
          </div>
          <div class="flex-1 min-w-0">
            <p class={`text-sm font-medium mb-1 ${
              message.type === 'investigating' ? 'text-yellow-600' : 'text-green-600'
            }`}>
              {message.type === 'investigating' ? 'Investigating Issue' : 'Issue Resolved'}
            </p>
            <p class="text-gray-800 mb-2">{message.message}</p>
            <p class="text-sm text-gray-500">{message.timestamp.toLocaleString()}</p>
          </div>
          <button class="opacity-0 group-hover:opacity-100 transition-opacity duration-200 ml-4 text-gray-400 hover:text-gray-600">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z" />
            </svg>
          </button>
        </li>
      ))}
    </ul>
  )}
</div>